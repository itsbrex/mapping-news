name: Validate Cache Against Database

on:
  schedule:
    # Run daily at midnight UTC
    - cron: "0 0 * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  validate-cache:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python with Poetry
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.8"
      - name: Install Poetry
        run: |
          pip install poetry

      # Step 3: Install dependencies
      - name: Install dependencies
        run: poetry install

      # Step 4: Download latest cache artifacts
      - name: Download cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: cache-artifacts
          path: cache-artifacts

      # Step 5: Copy artifacts to cache directory
      - name: Prepare cache directory
        run: |
          mkdir -p cache
          cp -r cache-artifacts/* cache/ || true

      # Step 6: Run the validation script
      - name: Run validation script
        run: poetry run python actions/validateCache.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
          SUPABASE_SER_KEY: ${{ secrets.SUPABASE_SER_KEY }}

      # Step 7: Create GitHub issue if discrepancies found
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Cache validation failed',
              body: 'The daily cache validation detected discrepancies between the cache artifacts and the database. Please check the workflow logs for details.'
            })
