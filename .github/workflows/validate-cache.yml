name: Validate Cache Against Database

on:
  schedule:
    # Run daily at midnight UTC
    - cron: "0 0 * * *"
  workflow_dispatch: # Allow manual triggering
    inputs:
      args:
        description: "Command line arguments for validateCache.py"
        default: ""
        required: false

jobs:
  validate-cache:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.8"
      - name: Install Poetry
        run: |
          pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Prepare cache directory
        run: mkdir -p cache

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: cache
          key: ${{ runner.os }}-cache-artifacts
          restore-keys: |
            ${{ runner.os }}-cache-artifacts

      - name: Run validation script
        run: poetry run python actions/validateCache.py ${{ github.event.inputs.args }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
          SUPABASE_SER_KEY: ${{ secrets.SUPABASE_SER_KEY }}

      - name: Save cache
        uses: actions/cache@v4
        with:
          path: cache
          key: ${{ runner.os }}-cache-artifacts-${{ github.run_id }}
